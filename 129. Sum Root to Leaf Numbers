/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    int sum;
    void help(TreeNode *root, int n)
    {
        if(root->left==NULL && root->right==NULL)
        {
            n=n*10+root->val;
            sum+=n;
            return;
        }
        if(root->left==NULL)
        {
            n=n*10+root->val;
            help(root->right,n);
            return;
        }
        if(root->right==NULL)
        {
            n=n*10+root->val;
            help(root->left,n);
            return;
        }
        n=n*10+root->val;
        help(root->left,n);
        help(root->right,n);
    }
    int sumNumbers(TreeNode* root) 
    {
        sum=0;
        if(root==NULL)
            return 0;
        help(root,0);
        return sum;
    }
};
