/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
    TreeNode* c[2];
    TreeNode *prev;
    void search(TreeNode* root)
    {
        if(root == NULL) return;

        search(root->left);
        if(prev != NULL)
        {
            if(c[0] == NULL && prev->val > root->val)
            {
                c[0] = prev; 
            }
            if(c[0] != NULL && prev->val > root->val)
            {
                c[1] = root;
            }
        }

        prev = root;

        search(root->right);
    }
public:
    void recoverTree(TreeNode* root) 
    {
        c[0]=NULL;
        c[1]=NULL;
        prev=NULL;
        search(root);
        int t=c[0]->val;
        c[0]->val=c[1]->val;
        c[1]->val=t;
    }
};
