/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    public boolean findTarget(TreeNode root, int k) 
    {
        Queue<TreeNode> q = new LinkedList<>();
        List<Integer> l = new ArrayList<>();
        q.add(root);
        int i,size=q.size(),a;
        TreeNode p;
        while(size != 0)
        {
            for(i=0;i<size;i++)
            {
                p=q.remove();
                l.add(p.val);
                if(p.left != null)
                    q.add(p.left);
                if(p.right != null)
                    q.add(p.right);
            }
            size = q.size();
        }
        size=l.size();
        while(l.size() != 0)
        {
            a=l.remove(0);
            if(l.contains(k-a))
                return true;
        }
        return false;
    }
}
