/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int l,a[20000];
    TreeNode* insert(int l, int r)
    {
        if(l==r)
            return NULL;
        TreeNode *head = new TreeNode;
        int c=(l+r)/2;
        head->val=a[c];
        head->left=insert(l,c);
        head->right=insert(c+1,r);
        return head;
    }
    TreeNode* sortedListToBST(ListNode* head) 
    {
        int i=0;
        if(head==NULL)
            return NULL;        
        ListNode *t;
        t=head;
        while(t!=NULL)
        {
            a[i]=t->val;
            i++;
            t=t->next;
        }
        l=i;
        TreeNode *temp;
        temp=insert(0,l);
        return temp;
    }
};
