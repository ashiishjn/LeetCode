/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    TreeNode* formation(vector<int>& nums, int i, int j)
    {
        if(i==j)
            return NULL;
        TreeNode *num = new TreeNode();
        num->val=nums[(j+i)/2];
        num->left=(formation(nums,i,(j+i)/2));
        num->right=(formation(nums,(j+i)/2+1,j));
        return num;
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) 
    {
        TreeNode *num = new TreeNode();
        int a=nums.size();
        if(a==0)
        {
            num=NULL;
            return num;
        }
        int x=nums.size();
        num->val=nums[x/2];
        num->left=(formation(nums,0,x/2));
        num->right=(formation(nums,x/2+1,x));
        return num;
    }
};
