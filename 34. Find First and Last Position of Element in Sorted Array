class Solution 
{
    public int first(int[] nums,int t)
    {
        int mid,l=0,h=nums.length-1,res=-1;
        while(l<=h)
        {
            mid=(l+h)/2;
            if(nums[mid]>t)
                h=mid-1;
            else if(nums[mid]<t)
                l=mid+1;
            else
            {
                res=mid;
                h=mid-1;
            }
        }
        return res;
    }
    public int last(int[] nums,int t)
    {
        int mid,l=0,h=nums.length-1,res=-1;
        while(l<=h)
        {
            mid=(l+h)/2;
            if(nums[mid]>t)
                h=mid-1;
            else if(nums[mid]<t)
                l=mid+1;
            else
            {
                res=mid;
                l=mid+1;
            }
        }
        return res;
    }
    public int[] searchRange(int[] nums, int target) 
    {
        int[] a = new int[2];
        a[0]=first(nums,target);
        a[1]=last(nums,target);
        return a;
    }
}
