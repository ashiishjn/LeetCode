/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    vector<vector<int>> levelOrder(TreeNode* root) 
    {
        vector<vector<int>> l;
        if(root==NULL)
            return l;
        int n=0,i,c=1;
        TreeNode *a[2000];
        a[0]=root;
        while(n!=c)
        {
            i=n;
            n=c;
            vector<int> l1;
            for(;i<n;i++)
            {
                l1.push_back(a[i]->val);
                if(a[i]->left!=NULL)
                    a[c++]=a[i]->left;
                if(a[i]->right!=NULL)
                    a[c++]=a[i]->right;
            }
            l.push_back(l1);
            
        }
        return l;
        
    }
};
