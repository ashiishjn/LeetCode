/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    List<String> l = new ArrayList<>();
    public void input(TreeNode root, String s)
    {
        s+="->"+Integer.toString(root.val);
        if(root.left == null && root.right == null)    
            l.add(s);
        else if(root.left == null)
            input(root.right,s);
        else if(root.right == null)
            input(root.left,s);
        else
        {
            input(root.left,s);
            input(root.right,s);
        }
    }
    public List<String> binaryTreePaths(TreeNode root) 
    {
        l.clear();
        String s=Integer.toString(root.val);
        if(root.left == null && root.right == null)    
            l.add(s);
        else if(root.left == null)
            input(root.right,s);
        else if(root.right == null)
            input(root.left,s);
        else
        {
            input(root.left,s);
            input(root.right,s);
        }    
        return l;
    }
}
