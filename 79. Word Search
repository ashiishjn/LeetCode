class Solution 
{
    static int m,n;
    static int dx[]={1,-1,0,0};
    static int dy[]={0,0,1,-1};
    public boolean backtrack(int i, int j, char[][] board, String word, int d)
    {
        if(d >=word.length())
            return true;
        else if(i>=m || j>=n || i<0 || j<0 || board[i][j]!=word.charAt(d))
            return false;
        char t=board[i][j];
        board[i][j]='#';
        for(int k=0;k<4;k++)
        {
            if(backtrack(i+dx[k],j+dy[k],board,word,d+1))
                return true;
        }
        board[i][j]=t;
        return false;
    }
    public boolean exist(char[][] board, String word) 
    {
        m=board.length;
        n=board[0].length;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(backtrack(i,j,board,word,0))
                    return true;
            }
        }
        return false;  
    }
}
