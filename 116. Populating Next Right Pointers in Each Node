/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}
    
    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _left, Node _right, Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/

class Solution 
{
    public Node connect(Node root) 
    {
        if(root==null)
            return root;
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        Node cur=root;
        while(q.size()!=0)
        {
            int size=q.size();
            while(size!=0)
            {
                cur=q.remove();
                if(cur.left!=null)
                    q.add(cur.left);
                if(cur.right!=null)
                    q.add(cur.right);
                size--;
                if(size!=0)
                    cur.next=q.peek();
            }
            cur.next=null;
        }
        return root;
    }
}
