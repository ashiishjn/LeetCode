/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) 
    {
        vector<vector<int>> l;
        if(root==NULL)
            return l;
        TreeNode *a[2000];
        a[0]=root;
        int c=1,n,i,j=0,x=0;
        while(c!=x)
        {
            vector<int> l1;
            i=c-1;
            n=x;
            for(;i>=n;i--)
                l1.push_back(a[i]->val);
            if(j%2==0)
            {
                
                i=c-1;
                n=x;
                x=c;
                for(;i>=n;i--)
                {
                    if(a[i]->left!=NULL)
                        a[c++]=a[i]->left;
                    if(a[i]->right!=NULL)
                        a[c++]=a[i]->right;
                }
            }
            else
            {
                i=c-1;
                n=x;
                x=c;
                for(;i>=n;i--)
                {
                    if(a[i]->right!=NULL)
                        a[c++]=a[i]->right;
                    if(a[i]->left!=NULL)
                        a[c++]=a[i]->left;
                }
            }
            
            j++;
            l.push_back(l1);
        }
        return l;
    }
};
