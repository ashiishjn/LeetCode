/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode root) 
    {
        if(root==null)
            return root;
        Queue<TreeNode> t = new LinkedList<>();
        t.add(root);
        TreeNode a,temp;
        int size,i;
        while(t.size() != 0)
        {
            size=t.size();
            for(i=0;i<size;i++)
            {
                a=t.remove();
                temp = a.left;
                a.left=a.right;
                a.right=temp;
                if(a.left!=null)
                    t.add(a.left);
                if(a.right!=null)
                    t.add(a.right);
            }
        }
        return root;
    }
}
