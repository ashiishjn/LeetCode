/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    public List<Integer> rightSideView(TreeNode root) 
    {
        List<Integer> l =new ArrayList<Integer>();
        if(root == null)
            return l;
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        TreeNode x=root;
        int i,s;
        while(!q.isEmpty())
        {
            s=q.size();
            for(i=1;i<=s;i++)
            {
                x=q.poll();
                if(x.left!=null)
                    q.offer(x.left);
                if(x.right!=null)
                    q.offer(x.right);
            }
            l.add(x.val);
        }
        return l;
    }
}
